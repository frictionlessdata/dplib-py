[project]
name = "dplib-py"
dynamic = ["version"]
description = "Python implementation of the Data Package standard"
license = "MIT"
readme = "README.md"
requires-python = ">=3.8"
urls.homepage = "https://github.com/frictionlessdata/dplib-py"
authors = [
    {name = "Open Knowledge Foundation", email = "info@okfn.org"},
]
keywords=[
    "data validation",
    "open data",
    "json schema",
    "json table schema",
    "data package",
    "tabular data package",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "pydantic>=2.0",
    "python-slugify>=6.0",
]

[project.optional-dependencies]
sql = ["sqlalchemy>=1.4"]
pandas = ["pandas>=1.0", "pandas-stubs>=1.0", "numpy>=1.0", "isodate>=0.6"]
polars = ["polars-lts-cpu>=0.10"]
dev = [
    "moto",
    "ruff",
    "httpx",
    "hatch",
    "isort",
    "black",
    "yattag",
    "neovim",
    "pytest",
    "mkdocs",
    "pyright",
    "ipython",
    "pytest-cov",
    "pytest-vcr",
    "pytest-mock",
    "pytest-only",
    "oauth2client",
    "requests-mock",
    "pytest-dotenv",
    "pytest-timeout",
    "pytest-lazy-fixture",
    "mkdocstrings[python]",
    "mkdocs-material",
]

[project.scripts]
# dp = "<module>:console"

[tool.hatch.version]
path = "dplib/settings.py"

[tool.hatch.envs.default]
python = "3.10"
dependencies = [
  "dplib-py[sql,pandas,polars,dev]",
]

[tool.hatch.envs.default.scripts]
coverage = [
  "sensible-browser coverage/index.html",
]
docs = [
  "mkdocs build",
]
format = [
  "ruff dplib --fix",
  "isort dplib",
  "black dplib",
]
lint = [
  "ruff dplib",
  "isort dplib --check",
  "black dplib --check",
]
spec = [
  "pytest --cov dplib --cov-report term-missing --cov-report html:coverage --cov-fail-under 0 --timeout=300",
]
test = [
  "hatch run lint",
  "hatch run type",
  "hatch run spec",
]
type = [
  "pyright dplib",
]
write = [
  "mkdocs serve",
]

[[tool.hatch.envs.ci.matrix]]
python = ["3.8", "3.9", "3.10"]

[tool.hatch.envs.ci.scripts]
test = [
  "hatch run lint",
  "pytest --cov dplib --cov-report term-missing --cov-report xml --cov-fail-under 0 --timeout=300 --ci",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 90

[tool.isort]
profile = "black"
multi_line_output = 9

[tool.ruff]
line-length = 90
ignore = ["E501", "E731", "F405"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.pytest.ini_options]
testpaths = ["dplib"]
env_files = [".env"]
markers = [
    "ci: integrational tests (select with '--ci')",
]
filterwarnings = [
    "ignore::DeprecationWarning:boto.*",
    "ignore::DeprecationWarning:moto.*",
    "ignore::DeprecationWarning:grako.*",
    "ignore::DeprecationWarning:savWriter.*",
    "ignore::Warning:duckdb_engine.*",
]

[tool.pyright]
strict = ["dplib"]
include = ["dplib"]
ignore = ["**/__init__.py"]
